version: '3'
services:
  match-platform-auth:
    container_name: match-platform-auth #配置容器名
    build:
      context: ./chaos-match-platform-auth
      dockerfile: Dockerfile #指定dockerFile文件
    image: java/match-platform-auth # 指定镜像名
    ports:
      - "8071:8071" # 暴露端口
    volumes:
      - ./logs:/logs # 创建容器数据卷
    networks:
      - KQM


  match-platform-gateway:
    container_name: match-platform-gateway #配置容器名
    build:
      context: ./chaos-match-platform-gateway
      dockerfile: Dockerfile #指定dockerFile文件
    image: java/match-platform-gateway # 指定镜像名
    ports:
      - "10010:10010" # 暴露端口
    volumes:
      - ./logs:/logs # 创建容器数据卷
    networks:
      - KQM

  match-platform-user:
    container_name: match-platform-user #配置容器名
    build:
      context: ./chaos-match-platform-user
      dockerfile: Dockerfile #指定dockerFile文件
    image: java/match-platform-user # 指定镜像名
    ports:
      - "8073:8073" # 暴露端口
    volumes:
      - ./logs:/logs # 创建容器数据卷
    networks:
      - KQM

  match-platform-weixin:
    container_name: match-platform-weixin #配置容器名
    build:
      context: ./chaos-match-platform-weixin
      dockerfile: Dockerfile #指定dockerFile文件
    image: java/match-platform-weixin # 指定镜像名
    ports:
      - "8072:8072" # 暴露端口
    volumes:
      - ./logs:/logs # 创建容器数据卷
    networks:
      - KQM

networks:
  KQM: